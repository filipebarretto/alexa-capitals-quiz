service: alexa-capitals-quiz

frameworkVersion: ">=1.34.0 <2.0.0"

provider:
  name: aws
  profile: alexa-capitals-quiz
  runtime: python3.7
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  deploymentBucket: ${self:custom.deployment_bucket}
  

functions:
  alexa_handler:
    handler: src/alexa_handler.lambda_handler
    description: Controls Alexa responses 
    memorySize: 128
    timeout: 15
    environment:
      ENV: 'environment'
      CAPITALS_TABLE: ${self:custom.capitals_table}
      USER_SCORE_TABLE: ${self:custom.users_score_table}
    events:
      - alexaSkill: amzn1.ask.skill.b54dd66e-ec9f-4dc6-801f-bca26c1ed0f6
    iamRoleStatementsName: ${self:service}-alexa-handler-role-${self:custom.stage}
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - lambda:GetLayerVersion
          - lambda:PublishLayerVersion
        Resource: "*"
      - Effect: "Allow"
        Action:
          - "logs:CreateLogGroup"
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
        Resource: "arn:aws:logs:*:*:*"
      - Effect: "Allow"
        Action:
          - "dynamodb:Scan"
          - "dynamodb:UpdateItem"
        Resource:
          - !GetAtt CapitalsTables.Arn
      - Effect: "Allow"
        Action:
          - "dynamodb:Query"
          - "dynamodb:PutItem"
          - "dynamodb:UpdateItem"
        Resource:
          - !GetAtt UsersScoreTables.Arn


resources:
  - Resources:
      CapitalsTables:
        Type: 'AWS::DynamoDB::Table'
        Properties:
          AttributeDefinitions:
            - AttributeName: country
              AttributeType: S
          KeySchema:
            - AttributeName: country
              KeyType: HASH
          BillingMode: PAY_PER_REQUEST
          TableName: ${self:custom.capitals_table}
      UsersScoreTables:
        Type: 'AWS::DynamoDB::Table'
        Properties:
          AttributeDefinitions:
            - AttributeName: id
              AttributeType: S
          KeySchema:
            - AttributeName: id
              KeyType: HASH
          BillingMode: PAY_PER_REQUEST
          TableName: ${self:custom.users_score_table}
  

package:
  individually: true
  exclude:
    - node_modules/**
    
custom:
  pythonRequirements:
    dockerizePip: non-linux
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  user_name: filipebarretto
  deployment_bucket: ${self:custom.account_id}-${self:service}-${self:provider.stage}
  account_id: ${file(./customjs/custom-account-id.js):getAccountId}
  capitals_table: ${self:service}-capitals-table-${self:provider.stage}
  users_score_table: ${self:service}-users-score-table-${self:provider.stage}
  
  
  
plugins:
  - serverless-python-requirements
  - serverless-iam-roles-per-function
  - serverless-plugin-create-deployment-bucket
  - serverless-pseudo-parameters
